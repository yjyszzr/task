<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dl.member.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.dl.member.model.User">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="nickname" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="birthday" jdbcType="INTEGER" property="birthday" />
    <result column="detail_address" jdbcType="VARCHAR" property="detailAddress" />
    <result column="headimg" jdbcType="VARCHAR" property="headImg" />
    <result column="user_money" jdbcType="DECIMAL" property="userMoney" />
    <result column="user_money_limit" jdbcType="DECIMAL" property="userMoneyLimit" />
    <result column="frozen_money" jdbcType="DECIMAL" property="frozenMoney" />
    <result column="pay_point" jdbcType="INTEGER" property="payPoint" />
    <result column="rank_point" jdbcType="INTEGER" property="rankPoint" />
    <result column="reg_time" jdbcType="INTEGER" property="regTime" />
    <result column="reg_ip" jdbcType="VARCHAR" property="regIp" />
    <result column="last_time" jdbcType="INTEGER" property="lastTime" />
    <result column="last_ip" jdbcType="VARCHAR" property="lastIp" />
    <result column="mobile_supplier" jdbcType="VARCHAR" property="mobileSupplier" />
    <result column="mobile_province" jdbcType="VARCHAR" property="mobileProvince" />
    <result column="mobile_city" jdbcType="VARCHAR" property="mobileCity" />
    <result column="reg_from" jdbcType="VARCHAR" property="regFrom" />
    <result column="surplus_password" jdbcType="VARCHAR" property="surplusPassword" />
    <result column="pay_pwd_salt" jdbcType="VARCHAR" property="payPwdSalt" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="pass_wrong_count" jdbcType="INTEGER" property="passWrongCount" />
    <result column="user_type" jdbcType="BIT" property="userType" />
    <result column="is_real" jdbcType="BIT" property="isReal" />
    <result column="user_remark" jdbcType="LONGVARCHAR" property="userRemark" />
    <result column="push_key" jdbcType="VARCHAR" property="pushKey" />
    <result column="device_channel" jdbcType="VARCHAR" property="deviceChannel" />
  </resultMap>
  
  
  <insert id="insertWithReturnId"  parameterType="com.dl.member.model.User" useGeneratedKeys="true" keyProperty="userId">
	INSERT INTO dl_user(user_name,mobile,
	email,password,salt,nickname,sex,birthday,detail_address,headimg,pay_point,rank_point,
	reg_time,reg_ip,last_time,last_ip,mobile_supplier,mobile_province,mobile_city,reg_from,
	surplus_password,pay_pwd_salt,user_status,pass_wrong_count,user_type,is_real,user_remark,add_time,push_key,device_channel)
	VALUES(#{userName},#{mobile},#{email},#{password},#{salt},#{nickName},#{sex},#{birthday},#{detailAddress},#{headImg},#{payPoint},#{rankPoint},
	#{regTime},#{regIp},#{lastTime},#{lastIp},#{mobileSupplier},#{mobileProvince},#{mobileCity},#{regFrom},
	#{surplusPassword},#{payPwdSalt},#{userStatus},#{passWrongCount},#{userType},#{isReal},#{userRemark},#{lastTime},#{pushKey},#{deviceChannel})
  </insert>
  
  <update id="updateUserBySelective" parameterType="com.dl.member.model.User">
    	 UPDATE dl_user
			 <trim prefix="set" suffixOverrides=",">
			  <if test="user_name!=null">user_name=#{userName},</if>
			  <if test="password">password=#{password},</if>
			  <if test="nickname!=null">nickname=#{nickName},</if>
			  <if test="sex!=null">sex=#{sex},</if>
			  <if test="headimg!=null">headimg=#{headImg},</if>
			  <if test="user_money!=null">user_money=#{userMoney},</if>
			  <if test="user_money_limit!=null">user_money_limit=#{userMoneyLimit},</if>
			  <if test="last_time!=null">last_time=#{lastTime},</if>
			  <if test="user_status!=null">user_status=#{userStatus},</if>
			  <if test="pass_wrong_count!=null">pass_wrong_count=#{passWrongCount},</if>
			  <if test="is_real!=null">is_real=#{isReal},</if>
			  <if test="push_key!=null">push_key=#{pushKey},</if>
			 </trim>
		 WHERE user_id=#{userId}  
  </update>
  
  <update id="updateUserMoneyAndUserMoneyLimit" parameterType="com.dl.member.model.User" >
  	UPDATE dl_user 
  		 <trim prefix="set" suffixOverrides=",">
		  <if test="userMoney!=null">user_money=#{userMoney},</if>
		  <if test="userMoneyLimit!=null">user_money_limit=#{userMoneyLimit},</if>
		  <if test="frozenMoney!=null">frozen_money=#{frozenMoney},</if>
		 </trim>
  	WHERE user_id = #{userId}
  </update>
  
    <update id="updateInDBUserMoneyAndUserMoneyLimit" parameterType="com.dl.member.model.User" >
  	UPDATE dl_user 
  		 <trim prefix="set" suffixOverrides=",">
		  <if test="userMoney!=null">user_money=user_money + #{userMoney},</if>
		  <if test="userMoneyLimit!=null">user_money_limit=user_money_limit + #{userMoneyLimit},</if>
		  <if test="frozenMoney!=null">frozen_money=frozen_money + #{frozenMoney},</if>
		 </trim>
  	WHERE user_id = #{userId}
  </update>
  
  
  <select id="queryUserExceptPass" resultMap="BaseResultMap">
  	 	SELECT 
  	 	user_name,mobile,email,nickname,sex,birthday,detail_address,
  	 	headimg,user_money,user_money_limit,frozen_money,pay_point,rank_point,
		reg_time,reg_ip,last_time,last_ip,mobile_supplier,mobile_province,mobile_city,
		reg_from,user_status,password,
		pass_wrong_count,user_type,is_real,user_remark ,device_channel
  	 	FROM dl_user WHERE user_id = #{userId}
  </select>
  
  <select id="queryUserByUserIds" resultMap="BaseResultMap">
  	 	SELECT * FROM dl_user WHERE user_id IN
	  	<foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
  </select>
  
  <insert id="saveMemberThirdApiLog">
  	insert into dl_third_api_log(api_name,api_type,api_param,api_result,api_desc)
  	values(#{apiName},#{apiType},#{apiParam},#{apiResult},#{apiDesc})
  </insert>
    
  <update id="updateUserMoneyForCashCoupon" parameterType="com.dl.member.model.User" >
  	UPDATE dl_user 
  		 <trim prefix="set" suffixOverrides=",">
		  <if test="userMoney!=null">user_money=#{userMoney},</if>
		 </trim>
  	WHERE user_id = #{userId}
  </update>
  
  <select id="getClientIds" resultType="string">
  	select DISTINCT push_key from dl_user where user_id IN
  	<foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
		#{item}
	</foreach>
  </select>
  
</mapper>